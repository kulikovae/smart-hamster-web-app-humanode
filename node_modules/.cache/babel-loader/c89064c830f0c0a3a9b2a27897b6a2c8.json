{"ast":null,"code":"var _jsxFileName = \"/Users/loyanix/projects/smart-hamster-web-app/src/components/BuyConfirmation.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { sendBuyMessage } from '../utils/telegramNotification';\nimport ThanksBlock from './ThanksBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BuyConfirmation = _ref => {\n  _s();\n\n  let {\n    refer,\n    closeWindow\n  } = _ref;\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [telegramId, setTelegramId] = React.useState('');\n  const [course, setCourse] = React.useState('');\n  const [txHash, setTxHash] = React.useState('');\n  const [showThanksMessage, setShowThanksMessage] = React.useState(false);\n\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeTelegramId = event => {\n    setTelegramId(event.target.value);\n  };\n\n  const onChangeCourse = event => {\n    setCourse(event.target.value);\n  };\n\n  const onChangeTxHash = event => {\n    setTxHash(event.target.value);\n  };\n\n  const onClickConfirm = () => {\n    console.log('Click');\n    sendBuyMessage(name, email, telegramId, course, txHash);\n    setShowThanksMessage(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThanksBlock, {\n      closeWindow: setShowThanksMessage,\n      title: \"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0443! \\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044F\\u0439 \\u0441\\u0432\\u043E\\u044E \\u043F\\u043E\\u0447\\u0442\\u0443 \\u0438 \\u0442\\u0435\\u043B\\u0435\\u0433\\u0440\\u0430\\u043C!\",\n      content: \"\\u0421\\u043E\\u0432\\u0441\\u0435\\u043C \\u0441\\u043A\\u043E\\u0440\\u043E \\u043C\\u044B \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F \\u0441 \\u0442\\u043E\\u0431\\u043E\\u0439 \\u0438 \\u0442\\u044B \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0448\\u044C \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A \\u043A\\u0443\\u0440\\u0441\\u0443!</br><span class=\\\"linear-indigo bg-no-repeat bg-b bg-100-10 hover-bg-100-100 ease-100\\\"> \\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 \\u043D\\u0430\\u0448\\u0443 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0443!</span>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BuyConfirmation, \"iNsXzogcAA5kuXiv66d2tscz9nI=\");\n\n_c = BuyConfirmation;\nexport default BuyConfirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyConfirmation\");","map":{"version":3,"names":["React","sendBuyMessage","ThanksBlock","BuyConfirmation","refer","closeWindow","name","setName","useState","email","setEmail","telegramId","setTelegramId","course","setCourse","txHash","setTxHash","showThanksMessage","setShowThanksMessage","onChangeName","event","target","value","onChangeEmail","onChangeTelegramId","onChangeCourse","onChangeTxHash","onClickConfirm","console","log"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/src/components/BuyConfirmation.jsx"],"sourcesContent":["import React from 'react';\nimport { sendBuyMessage } from '../utils/telegramNotification';\nimport ThanksBlock from './ThanksBlock';\n\nconst BuyConfirmation = ({ refer, closeWindow }) => {\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [telegramId, setTelegramId] = React.useState('');\n  const [course, setCourse] = React.useState('');\n  const [txHash, setTxHash] = React.useState('');\n  const [showThanksMessage, setShowThanksMessage] = React.useState(false);\n\n  const onChangeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeTelegramId = (event) => {\n    setTelegramId(event.target.value);\n  };\n\n  const onChangeCourse = (event) => {\n    setCourse(event.target.value);\n  };\n\n  const onChangeTxHash = (event) => {\n    setTxHash(event.target.value);\n  };\n\n  const onClickConfirm = () => {\n    console.log('Click');\n    sendBuyMessage(name, email, telegramId, course, txHash);\n    setShowThanksMessage(true);\n  };\n\n  return (\n    <>\n      <ThanksBlock\n        closeWindow={setShowThanksMessage}\n        title=\"Спасибо за покупку! Проверяй свою почту и телеграм!\"\n        content='Совсем скоро мы свяжемся с тобой\n          и ты получишь доступ к курсу!</br><span class=\"linear-indigo bg-no-repeat bg-b bg-100-10 hover-bg-100-100 ease-100\">\n          Добро пожаловать в нашу команду!</span>'\n      />\n    </>\n  );\n};\n\nexport default BuyConfirmation;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,eAAe,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC,KAAF;IAASC;EAAT,CAA2B;EAClD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACQ,QAAN,CAAe,EAAf,CAApC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4ClB,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAlD;;EAEA,MAAMW,YAAY,GAAIC,KAAD,IAAW;IAC9Bb,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAIH,KAAD,IAAW;IAC/BV,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACD,CAFD;;EAIA,MAAME,kBAAkB,GAAIJ,KAAD,IAAW;IACpCR,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,MAAMG,cAAc,GAAIL,KAAD,IAAW;IAChCN,SAAS,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD;;EAIA,MAAMI,cAAc,GAAIN,KAAD,IAAW;IAChCJ,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD;;EAIA,MAAMK,cAAc,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA5B,cAAc,CAACK,IAAD,EAAOG,KAAP,EAAcE,UAAd,EAA0BE,MAA1B,EAAkCE,MAAlC,CAAd;IACAG,oBAAoB,CAAC,IAAD,CAApB;EACD,CAJD;;EAMA,oBACE;IAAA,uBACE,QAAC,WAAD;MACE,WAAW,EAAEA,oBADf;MAEE,KAAK,EAAC,uQAFR;MAGE,OAAO,EAAC;IAHV;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAWD,CA7CD;;GAAMf,e;;KAAAA,e;AA+CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}