{"ast":null,"code":"var _jsxFileName = \"/Users/loyanix/projects/smart-hamster-web-app/src/components/BuyConfirmation.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { sendBuyMessageToTelegram } from '../utils/telegramNotification';\nimport { sendBuyMessageToEmail } from '../utils/emailNotifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thanksMessage = {\n  title: 'Спасибо за покупку! Проверяй свою почту и телеграм!',\n  content: `Совсем скоро мы свяжемся с тобой и ты получишь доступ к курсу!\n  Добро пожаловать в нашу команду!`\n};\n\nconst BuyConfirmation = _ref => {\n  _s();\n\n  let {\n    refer,\n    closeWindow,\n    showThanksMessage,\n    thanksTitle,\n    thanksContent\n  } = _ref;\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [telegramId, setTelegramId] = React.useState('');\n  const [course, setCourse] = React.useState('');\n  const [txHash, setTxHash] = React.useState('');\n\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeTelegramId = event => {\n    setTelegramId(event.target.value);\n  };\n\n  const onChangeCourse = event => {\n    setCourse(event.target.value);\n  };\n\n  const onChangeTxHash = event => {\n    setTxHash(event.target.value);\n  };\n\n  const onClickConfirm = () => {\n    sendBuyMessageToEmail(name, email, telegramId, course, txHash);\n    sendBuyMessageToTelegram(name, email, telegramId, course, txHash);\n    closeWindow(false);\n    thanksTitle(thanksMessage.title);\n    thanksContent(thanksMessage.content);\n    showThanksMessage(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-popup bg-black p-5 md-p-l4 flex flex-wrap md-justify-between md-items-center show\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: refer,\n      className: \"box bg-indigo-lightest-10 scrool\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"black text-center\",\n          children: [\"Smart\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \"Hamster\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \"Nodes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), \"Studio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BuyConfirmation, \"INWipiHJMGUSHu8I03Mnv5FbiAI=\");\n\n_c = BuyConfirmation;\nexport default BuyConfirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyConfirmation\");","map":{"version":3,"names":["React","sendBuyMessageToTelegram","sendBuyMessageToEmail","thanksMessage","title","content","BuyConfirmation","refer","closeWindow","showThanksMessage","thanksTitle","thanksContent","name","setName","useState","email","setEmail","telegramId","setTelegramId","course","setCourse","txHash","setTxHash","onChangeName","event","target","value","onChangeEmail","onChangeTelegramId","onChangeCourse","onChangeTxHash","onClickConfirm"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/src/components/BuyConfirmation.jsx"],"sourcesContent":["import React from 'react';\nimport { sendBuyMessageToTelegram } from '../utils/telegramNotification';\nimport { sendBuyMessageToEmail } from '../utils/emailNotifications';\n\nconst thanksMessage = {\n  title: 'Спасибо за покупку! Проверяй свою почту и телеграм!',\n  content: `Совсем скоро мы свяжемся с тобой и ты получишь доступ к курсу!\n  Добро пожаловать в нашу команду!`,\n};\n\nconst BuyConfirmation = ({ refer, closeWindow, showThanksMessage, thanksTitle, thanksContent }) => {\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [telegramId, setTelegramId] = React.useState('');\n  const [course, setCourse] = React.useState('');\n  const [txHash, setTxHash] = React.useState('');\n\n  const onChangeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeTelegramId = (event) => {\n    setTelegramId(event.target.value);\n  };\n\n  const onChangeCourse = (event) => {\n    setCourse(event.target.value);\n  };\n\n  const onChangeTxHash = (event) => {\n    setTxHash(event.target.value);\n  };\n\n  const onClickConfirm = () => {\n    sendBuyMessageToEmail(name, email, telegramId, course, txHash);\n    sendBuyMessageToTelegram(name, email, telegramId, course, txHash);\n    closeWindow(false);\n    thanksTitle(thanksMessage.title);\n    thanksContent(thanksMessage.content);\n    showThanksMessage(true);\n  };\n\n  return (\n    <div className=\"login-popup bg-black p-5 md-p-l4 flex flex-wrap md-justify-between md-items-center show\">\n      <div ref={refer} className=\"box bg-indigo-lightest-10 scrool\">\n        <div className=\"img-area\">\n          <div className=\"img\"></div>\n          <h1 className=\"black text-center\">\n            Smart\n            <br />\n            Hamster\n            <br />\n            Nodes\n            <br />\n            Studio\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BuyConfirmation;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,qBAAT,QAAsC,6BAAtC;;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,qDADa;EAEpBC,OAAO,EAAG;AACZ;AAHsB,CAAtB;;AAMA,MAAMC,eAAe,GAAG,QAA2E;EAAA;;EAAA,IAA1E;IAAEC,KAAF;IAASC,WAAT;IAAsBC,iBAAtB;IAAyCC,WAAzC;IAAsDC;EAAtD,CAA0E;EACjG,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACc,QAAN,CAAe,EAAf,CAApC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBpB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBtB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B;;EAEA,MAAMS,YAAY,GAAIC,KAAD,IAAW;IAC9BX,OAAO,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAIH,KAAD,IAAW;IAC/BR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACD,CAFD;;EAIA,MAAME,kBAAkB,GAAIJ,KAAD,IAAW;IACpCN,aAAa,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,MAAMG,cAAc,GAAIL,KAAD,IAAW;IAChCJ,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD;;EAIA,MAAMI,cAAc,GAAIN,KAAD,IAAW;IAChCF,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD;;EAIA,MAAMK,cAAc,GAAG,MAAM;IAC3B7B,qBAAqB,CAACU,IAAD,EAAOG,KAAP,EAAcE,UAAd,EAA0BE,MAA1B,EAAkCE,MAAlC,CAArB;IACApB,wBAAwB,CAACW,IAAD,EAAOG,KAAP,EAAcE,UAAd,EAA0BE,MAA1B,EAAkCE,MAAlC,CAAxB;IACAb,WAAW,CAAC,KAAD,CAAX;IACAE,WAAW,CAACP,aAAa,CAACC,KAAf,CAAX;IACAO,aAAa,CAACR,aAAa,CAACE,OAAf,CAAb;IACAI,iBAAiB,CAAC,IAAD,CAAjB;EACD,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,yFAAf;IAAA,uBACE;MAAK,GAAG,EAAEF,KAAV;MAAiB,SAAS,EAAC,kCAA3B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,wBACE;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAC,mBAAd;UAAA,iCAEE;YAAA;YAAA;YAAA;UAAA,QAFF,0BAIE;YAAA;YAAA;YAAA;UAAA,QAJF,wBAME;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAtDD;;GAAMD,e;;KAAAA,e;AAwDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}