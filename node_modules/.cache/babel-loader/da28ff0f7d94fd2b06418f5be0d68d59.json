{"ast":null,"code":"let newLine = '\\n';\nexport function sendContactMeMessageToEmail(name, question) {\n  let telegramMessage = '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑' + name + ' 🍑' + newLine + '❓❓❓ У меня возник следующий вопрос: ' + question + ' ❓ ❓ ❓' + newLine + '💥 🔥 🚀';\n}\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let message = '🥳 🤑 Покупка курса 🥳 🤑 :' + newLine + 'Имя ' + name + newLine + 'Почта ' + email + newLine + 'Телеграмм ' + telegramId + newLine + 'Курс ' + course + newLine + 'Хэш транзакции ' + txHash + newLine + '🔥 🚀';\n  sendPaymentInfo(message);\n}\n\nfunction sendContactMe(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: '{\"message\": \"' + message + '\"}'\n  };\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: '{\"message\": \"' + message + '\"}'\n  };\n  const response = fetch('https://smarthamster.tech/php/buy.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}","map":{"version":3,"names":["newLine","sendContactMeMessageToEmail","name","question","telegramMessage","sendBuyMessageToEmail","email","telegramId","course","txHash","message","sendPaymentInfo","sendContactMe","options","method","headers","Accept","body","response","fetch","then","json","console","log","catch","err","error"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/src/utils/emailNotifications.js"],"sourcesContent":["let newLine = '\\n';\n\nexport function sendContactMeMessageToEmail(name, question) {\n  let telegramMessage =\n    '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑' +\n    name +\n    ' 🍑' +\n    newLine +\n    '❓❓❓ У меня возник следующий вопрос: ' +\n    question +\n    ' ❓ ❓ ❓' +\n    newLine +\n    '💥 🔥 🚀';\n}\n\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let message =\n    '🥳 🤑 Покупка курса 🥳 🤑 :' +\n    newLine +\n    'Имя ' +\n    name +\n    newLine +\n    'Почта ' +\n    email +\n    newLine +\n    'Телеграмм ' +\n    telegramId +\n    newLine +\n    'Курс ' +\n    course +\n    newLine +\n    'Хэш транзакции ' +\n    txHash +\n    newLine +\n    '🔥 🚀';\n\n  sendPaymentInfo(message);\n}\n\nfunction sendContactMe(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: '{\"message\": \"' + message + '\"}',\n  };\n\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: '{\"message\": \"' + message + '\"}',\n  };\n\n  const response = fetch('https://smarthamster.tech/php/buy.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n"],"mappings":"AAAA,IAAIA,OAAO,GAAG,IAAd;AAEA,OAAO,SAASC,2BAAT,CAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;EAC1D,IAAIC,eAAe,GACjB,4EACAF,IADA,GAEA,KAFA,GAGAF,OAHA,GAIA,sCAJA,GAKAG,QALA,GAMA,QANA,GAOAH,OAPA,GAQA,UATF;AAUD;AAED,OAAO,SAASK,qBAAT,CAA+BH,IAA/B,EAAqCI,KAArC,EAA4CC,UAA5C,EAAwDC,MAAxD,EAAgEC,MAAhE,EAAwE;EAC7E,IAAIC,OAAO,GACT,gCACAV,OADA,GAEA,MAFA,GAGAE,IAHA,GAIAF,OAJA,GAKA,QALA,GAMAM,KANA,GAOAN,OAPA,GAQA,YARA,GASAO,UATA,GAUAP,OAVA,GAWA,OAXA,GAYAQ,MAZA,GAaAR,OAbA,GAcA,iBAdA,GAeAS,MAfA,GAgBAT,OAhBA,GAiBA,OAlBF;EAoBAW,eAAe,CAACD,OAAD,CAAf;AACD;;AAED,SAASE,aAAT,CAAuBF,OAAvB,EAAgC;EAC9B,MAAMG,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFK;IAMdC,IAAI,EAAE,kBAAkBP,OAAlB,GAA4B;EANpB,CAAhB;EASA,MAAMQ,QAAQ,GAAGC,KAAK,CAAC,6CAAD,EAAgDN,OAAhD,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADL,EAEdD,IAFc,CAERF,QAAD,IAAcI,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAFL,EAGdM,KAHc,CAGPC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOP,QAAP;AACD;;AAED,SAASP,eAAT,CAAyBD,OAAzB,EAAkC;EAChC,MAAMG,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFK;IAMdC,IAAI,EAAE,kBAAkBP,OAAlB,GAA4B;EANpB,CAAhB;EASA,MAAMQ,QAAQ,GAAGC,KAAK,CAAC,uCAAD,EAA0CN,OAA1C,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADL,EAEdD,IAFc,CAERF,QAAD,IAAcI,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAFL,EAGdM,KAHc,CAGPC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOP,QAAP;AACD"},"metadata":{},"sourceType":"module"}