{"ast":null,"code":"import { isValidElement, cloneElement, createElement } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\n\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\n\nfunction getChildren(node) {\n  if (!node) return [];\n  return node.props ? node.props.children : node.children;\n}\n\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(child => isValidElement(child));\n}\n\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\n\nfunction mergeProps(source, target) {\n  const newTarget = { ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\n\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === 'string') {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === 'object') {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\n\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling) return [targetString];\n  const data = {};\n\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (typeof child === 'object' && !isValidElement(child)) Object.assign(data, child);\n    });\n  }\n\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = { ...data,\n    ...combinedTOpts\n  };\n\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n  }\n\n  function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n    if (child.dummy) child.children = inner;\n    mem.push(cloneElement(child, { ...child.props,\n      key: i\n    }, isVoid ? undefined : inner));\n  }\n\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === 'object' && child.dummy && !isElement;\n        const isKnownComponent = typeof children === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n\n        if (typeof child === 'string') {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          mem.push(cloneElement(child, { ...child.props,\n            key: i\n          }, inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === 'object' && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          mem.push(cloneElement(child, { ...child.props,\n            key: i\n          }, translationContent));\n        } else {\n          mem.push(cloneElement(child, { ...child.props,\n            key: i\n          }));\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n\n      return mem;\n    }, []);\n  }\n\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\n\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n\n  if (context) tOptions.context = context;\n  const reactI18nextOptions = { ...getDefaults(),\n    ...(i18n.options && i18n.options.react)\n  };\n  let namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  const defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: { ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = { ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"names":["isValidElement","cloneElement","createElement","HTML","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","base","props","children","length","getChildren","hasValidReactChildren","Object","prototype","toString","call","every","child","getAsArray","data","Array","isArray","mergeProps","source","target","newTarget","assign","nodesToString","i18nOptions","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","childIndex","childPropsCount","keys","shouldKeepChild","indexOf","type","childChildren","i18nIsDynamicList","content","format","clone","value","renderNodes","targetString","i18n","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","reactNode","astNode","reactNodes","astNodes","reduce","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","Trans","_ref","count","parent","i18nKey","context","tOptions","values","defaults","components","ns","i18nFromProps","t","tFromProps","additionalProps","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","defaultValue","transEmptyNodeValue","hashTransKey","interpolationOverride","interpolation","prefix","suffix","translation","useAsParent","defaultTransParent"],"sources":["/Users/loyanix/projects/frontend/smart-hamster-web-app/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"sourcesContent":["import { isValidElement, cloneElement, createElement } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node) return [];\n  return node.props ? node.props.children : node.children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(child => isValidElement(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === 'string') {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === 'object') {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling) return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (typeof child === 'object' && !isValidElement(child)) Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n    if (child.dummy) child.children = inner;\n    mem.push(cloneElement(child, {\n      ...child.props,\n      key: i\n    }, isVoid ? undefined : inner));\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === 'object' && child.dummy && !isElement;\n        const isKnownComponent = typeof children === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === 'string') {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === 'object' && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, translationContent));\n        } else {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }));\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  if (context) tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...(i18n.options && i18n.options.react)\n  };\n  let namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  const defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}