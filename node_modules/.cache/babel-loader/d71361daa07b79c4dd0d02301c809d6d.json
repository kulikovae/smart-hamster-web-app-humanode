{"ast":null,"code":"export function sendContactMeMessageToEmail(name, question) {\n  let message = '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑 ' + name + ' 🍑 ' + ' ❓❓❓ У меня возник следующий вопрос: ' + question + ' ❓ ❓ ❓ ' + ' 💥 🔥 🚀';\n  sendContactMe(message);\n}\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let message = '🥳 🤑 Покупка курса 🥳 🤑 :' + ' Имя ' + name + ' Почта ' + email + ' Телеграмм ' + telegramId + ' Курс ' + course + ' Хэш транзакции ' + txHash + ' 🔥 🚀';\n  sendPaymentInfo(message);\n}\n\nfunction sendContactMe(message) {\n  const json = '{\"message\": \"' + message + '\"}';\n  console.log(json);\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n    },\n    body: json\n  };\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: '{\"message\": \"' + message + '\"}'\n  };\n  const response = fetch('https://smarthamster.tech/php/buy.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}","map":{"version":3,"names":["sendContactMeMessageToEmail","name","question","message","sendContactMe","sendBuyMessageToEmail","email","telegramId","course","txHash","sendPaymentInfo","json","console","log","options","method","headers","Accept","body","response","fetch","then","catch","err","error"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/src/utils/emailNotifications.js"],"sourcesContent":["export function sendContactMeMessageToEmail(name, question) {\n  let message =\n    '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑 ' +\n    name +\n    ' 🍑 ' +\n    ' ❓❓❓ У меня возник следующий вопрос: ' +\n    question +\n    ' ❓ ❓ ❓ ' +\n    ' 💥 🔥 🚀';\n\n  sendContactMe(message);\n}\n\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let message =\n    '🥳 🤑 Покупка курса 🥳 🤑 :' +\n    ' Имя ' +\n    name +\n    ' Почта ' +\n    email +\n    ' Телеграмм ' +\n    telegramId +\n    ' Курс ' +\n    course +\n    ' Хэш транзакции ' +\n    txHash +\n    ' 🔥 🚀';\n\n  sendPaymentInfo(message);\n}\n\nfunction sendContactMe(message) {\n  const json = '{\"message\": \"' + message + '\"}';\n  console.log(json);\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n    },\n    body: json,\n  };\n\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: '{\"message\": \"' + message + '\"}',\n  };\n\n  const response = fetch('https://smarthamster.tech/php/buy.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n"],"mappings":"AAAA,OAAO,SAASA,2BAAT,CAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;EAC1D,IAAIC,OAAO,GACT,6EACAF,IADA,GAEA,MAFA,GAGA,uCAHA,GAIAC,QAJA,GAKA,SALA,GAMA,WAPF;EASAE,aAAa,CAACD,OAAD,CAAb;AACD;AAED,OAAO,SAASE,qBAAT,CAA+BJ,IAA/B,EAAqCK,KAArC,EAA4CC,UAA5C,EAAwDC,MAAxD,EAAgEC,MAAhE,EAAwE;EAC7E,IAAIN,OAAO,GACT,gCACA,OADA,GAEAF,IAFA,GAGA,SAHA,GAIAK,KAJA,GAKA,aALA,GAMAC,UANA,GAOA,QAPA,GAQAC,MARA,GASA,kBATA,GAUAC,MAVA,GAWA,QAZF;EAcAC,eAAe,CAACP,OAAD,CAAf;AACD;;AAED,SAASC,aAAT,CAAuBD,OAAvB,EAAgC;EAC9B,MAAMQ,IAAI,GAAG,kBAAkBR,OAAlB,GAA4B,IAAzC;EACAS,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB,kBAFT;MAGP,+BAA+B,GAHxB;MAIP,gCAAgC;IAJzB,CAFK;IAQdC,IAAI,EAAEP;EARQ,CAAhB;EAWA,MAAMQ,QAAQ,GAAGC,KAAK,CAAC,6CAAD,EAAgDN,OAAhD,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACR,IAAT,EADL,EAEdU,IAFc,CAERF,QAAD,IAAcP,OAAO,CAACC,GAAR,CAAYM,QAAZ,CAFL,EAGdG,KAHc,CAGPC,GAAD,IAASX,OAAO,CAACY,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOJ,QAAP;AACD;;AAED,SAAST,eAAT,CAAyBP,OAAzB,EAAkC;EAChC,MAAMW,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFK;IAMdC,IAAI,EAAE,kBAAkBf,OAAlB,GAA4B;EANpB,CAAhB;EASA,MAAMgB,QAAQ,GAAGC,KAAK,CAAC,uCAAD,EAA0CN,OAA1C,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACR,IAAT,EADL,EAEdU,IAFc,CAERF,QAAD,IAAcP,OAAO,CAACC,GAAR,CAAYM,QAAZ,CAFL,EAGdG,KAHc,CAGPC,GAAD,IAASX,OAAO,CAACY,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOJ,QAAP;AACD"},"metadata":{},"sourceType":"module"}