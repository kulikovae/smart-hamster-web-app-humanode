{"ast":null,"code":"\"use strict\";\n\nconst fetch = require(\"isomorphic-unfetch\"); //Email\n\n\nconst email = require(\"./modules/email.js\");\n\nconst tokens = require(\"./modules/tokens.js\");\n\nconst activity = require(\"./modules/activity.js\");\n\nconst domains = require(\"./modules/domains.js\");\n\nconst messages = require(\"./modules/messages.js\");\n\nconst recipients = require(\"./modules/recipients.js\");\n\nconst templates = require(\"./modules/templates.js\");\n\nconst webhooks = require(\"./modules/webhooks.js\");\n\nconst emailVerification = require(\"./modules/email-verification\");\n\nconst schedules = require(\"./modules/schedules.js\");\n\nconst inbounds = require(\"./modules/inbounds.js\"); //SMS\n\n\nconst sms = require(\"./modules/sms.js\");\n\nconst smsNumbers = require(\"./modules/sms/numbers.js\");\n\nconst smsWebhooks = require(\"./modules/sms/webhooks.js\");\n\nconst smsInbounds = require(\"./modules/sms/inbounds.js\");\n\nconst smsActivities = require(\"./modules/sms/activities.js\");\n\nconst smsMessages = require(\"./modules/sms/messages.js\");\n\nconst smsRecipients = require(\"./modules/sms/recipients.js\");\n\nlet headers = {\n  \"X-Requested-With\": \"XMLHttpRequest\",\n  \"Content-type\": \"application/json\"\n};\nmodule.exports = class MailerSend {\n  constructor(config) {\n    this.api_key = config.api_key;\n    this.basePath = \"https://api.mailersend.com/v1\";\n    headers.Authorization = `Bearer ${this.api_key}`;\n    return Object.assign(this, email, tokens, activity, domains, messages, recipients, templates, webhooks, emailVerification, schedules, inbounds, sms, smsNumbers, smsWebhooks, smsInbounds, smsActivities, smsMessages, smsRecipients);\n  }\n\n  request() {\n    let endpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      headers = {},\n      method = 'GET',\n      body = null,\n      params = {}\n    } = options;\n    let queryString = serializeQuery(params);\n    queryString = queryString ? `?${queryString}` : '';\n    return fetch(this.basePath + endpoint + queryString, {\n      method,\n      headers: { ...headers,\n        Authorization: `Bearer ${this.api_key}`,\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        \"Content-type\": \"application/json\"\n      },\n      body: body && JSON.stringify(body)\n    });\n  }\n\n};\n\nfunction serializeQuery(params, prefix) {\n  const query = Object.keys(params).map(key => {\n    const value = params[key];\n    if (params.constructor === Array) key = `${prefix}[]`;else if (params.constructor === Object) key = prefix ? `${prefix}[${key}]` : key;\n    if (typeof value === 'object') return serializeQuery(value, key);else return `${key}=${encodeURIComponent(value)}`;\n  });\n  return [].concat.apply([], query).join('&');\n}","map":{"version":3,"names":["fetch","require","email","tokens","activity","domains","messages","recipients","templates","webhooks","emailVerification","schedules","inbounds","sms","smsNumbers","smsWebhooks","smsInbounds","smsActivities","smsMessages","smsRecipients","headers","module","exports","MailerSend","constructor","config","api_key","basePath","Authorization","Object","assign","request","endpoint","options","method","body","params","queryString","serializeQuery","JSON","stringify","prefix","query","keys","map","key","value","Array","encodeURIComponent","concat","apply","join"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/node_modules/mailersend/src/MailerSend.js"],"sourcesContent":["\"use strict\";\nconst fetch = require(\"isomorphic-unfetch\");\n\n//Email\nconst email = require(\"./modules/email.js\");\nconst tokens = require(\"./modules/tokens.js\");\nconst activity = require(\"./modules/activity.js\");\nconst domains = require(\"./modules/domains.js\");\nconst messages = require(\"./modules/messages.js\");\nconst recipients = require(\"./modules/recipients.js\");\nconst templates = require(\"./modules/templates.js\");\nconst webhooks = require(\"./modules/webhooks.js\");\nconst emailVerification = require(\"./modules/email-verification\");\nconst schedules = require(\"./modules/schedules.js\");\nconst inbounds = require(\"./modules/inbounds.js\");\n\n//SMS\nconst sms = require(\"./modules/sms.js\");\nconst smsNumbers = require(\"./modules/sms/numbers.js\");\nconst smsWebhooks = require(\"./modules/sms/webhooks.js\");\nconst smsInbounds = require(\"./modules/sms/inbounds.js\");\nconst smsActivities = require(\"./modules/sms/activities.js\");\nconst smsMessages = require(\"./modules/sms/messages.js\");\nconst smsRecipients = require(\"./modules/sms/recipients.js\");\n\nlet headers = {\n  \"X-Requested-With\": \"XMLHttpRequest\",\n  \"Content-type\": \"application/json\",\n};\n\nmodule.exports = class MailerSend {\n  constructor(config) {\n    this.api_key = config.api_key;\n    this.basePath = \"https://api.mailersend.com/v1\";\n    headers.Authorization = `Bearer ${this.api_key}`;\n\n    return Object.assign(\n      this,\n      email,\n      tokens,\n      activity,\n      domains,\n      messages,\n      recipients,\n      templates,\n      webhooks,\n      emailVerification,\n      schedules,\n      inbounds,\n      sms,\n      smsNumbers,\n      smsWebhooks,\n      smsInbounds,\n      smsActivities,\n      smsMessages,\n      smsRecipients,\n    )\n  }\n\n  request(endpoint = \"\", options = {}) {\n    const { headers = {}, method = 'GET', body = null, params = {}} = options\n\n    let queryString = serializeQuery(params)\n    queryString = queryString ? `?${queryString}` : ''\n\n    return fetch(this.basePath + endpoint + queryString, {\n      method,\n\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${this.api_key}`,\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        \"Content-type\": \"application/json\",\n      },\n\n      body: body && JSON.stringify(body)\n    });\n  }\n};\n\nfunction serializeQuery(params, prefix) {\n  const query = Object.keys(params).map((key) => {\n    const value  = params[key];\n\n    if (params.constructor === Array)\n      key = `${prefix}[]`;\n    else if (params.constructor === Object)\n      key = (prefix ? `${prefix}[${key}]` : key);\n\n    if (typeof value === 'object')\n      return serializeQuery(value, key);\n    else\n      return `${key}=${encodeURIComponent(value)}`;\n  });\n\n  return [].concat.apply([], query).join('&')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}