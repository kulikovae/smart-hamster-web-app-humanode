{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = void 0;\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst depd_1 = __importDefault(require(\"depd\"));\n\nconst providers_1 = require(\"./providers\");\n\nconst errors_1 = require(\"./utils/errors\"); // Makes `function.name` return given name\n\n\nfunction nameFunction(name, body) {\n  return {\n    [name]() {\n      return body(...arguments);\n    }\n\n  }[name];\n}\n\nconst isUint8Array = x => x && x.byteLength !== undefined && x.byteLength === x.length;\n\nconst isObject = x => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\n\n\nclass Contract {\n  /**\n   * @param account NEAR account to sign change method transactions\n   * @param contractId NEAR account id where the contract is deployed\n   * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n   */\n  constructor(account, contractId, options) {\n    var _this = this;\n\n    this.account = account;\n    this.contractId = contractId;\n    const {\n      viewMethods = [],\n      changeMethods = []\n    } = options;\n    viewMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, function () {\n          let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          for (var _len = arguments.length, ignored = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n            ignored[_key - 2] = arguments[_key];\n          }\n\n          return __awaiter(_this, void 0, void 0, function* () {\n            if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n              throw new errors_1.PositionalArgsError();\n            }\n\n            return this.account.viewFunction(this.contractId, methodName, args, options);\n          });\n        })\n      });\n    });\n    changeMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return __awaiter(_this, void 0, void 0, function* () {\n            if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n              throw new errors_1.PositionalArgsError();\n            }\n\n            if (args.length > 1 || !(args[0] && args[0].args)) {\n              const deprecate = (0, depd_1.default)('contract.methodName(args, gas, amount)');\n              deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n              return this._changeMethod({\n                methodName,\n                args: args[0],\n                gas: args[1],\n                amount: args[2]\n              });\n            }\n\n            return this._changeMethod(Object.assign({\n              methodName\n            }, args[0]));\n          });\n        })\n      });\n    });\n  }\n\n  _changeMethod(_ref) {\n    let {\n      args,\n      methodName,\n      gas,\n      amount,\n      meta,\n      callbackUrl\n    } = _ref;\n    return __awaiter(this, void 0, void 0, function* () {\n      validateBNLike({\n        gas,\n        amount\n      });\n      const rawResult = yield this.account.functionCall({\n        contractId: this.contractId,\n        methodName,\n        args,\n        gas,\n        attachedDeposit: amount,\n        walletMeta: meta,\n        walletCallbackUrl: callbackUrl\n      });\n      return (0, providers_1.getTransactionLastResult)(rawResult);\n    });\n  }\n\n}\n\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\n\nfunction validateBNLike(argMap) {\n  const bnLike = 'number, decimal string or BN';\n\n  for (const argName of Object.keys(argMap)) {\n    const argValue = argMap[argName];\n\n    if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n      throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n    }\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","Contract","bn_js_1","require","depd_1","providers_1","errors_1","nameFunction","name","body","isUint8Array","x","byteLength","undefined","length","isObject","prototype","toString","call","constructor","account","contractId","options","viewMethods","changeMethods","forEach","methodName","writable","enumerable","args","ignored","PositionalArgsError","viewFunction","deprecate","default","_changeMethod","gas","amount","assign","meta","callbackUrl","validateBNLike","rawResult","functionCall","attachedDeposit","walletMeta","walletCallbackUrl","getTransactionLastResult","argMap","bnLike","argName","keys","argValue","isBN","isNaN","ArgumentTypeError"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/node_modules/near-api-js/lib/contract.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                }))\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod(Object.assign({ methodName }, args[0]));\n                }))\n            });\n        });\n    }\n    _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const rawResult = yield this.account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl\n            });\n            return (0, providers_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}