{"ast":null,"code":"let newLine = '\\n';\nconst from = 'donotreply@smarthamster.tech';\nconst recipients = [new Recipient('sh.node.studio@gmail.com', 'sh.node.studio')];\nexport function sendContactMeMessageToEmail(name, question) {\n  let telegramMessage = '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑' + name + ' 🍑' + newLine + '❓❓❓ У меня возник следующий вопрос: ' + question + ' ❓ ❓ ❓' + newLine + '💥 🔥 🚀';\n  const subject = 'Запрос на обратную связь с сайта smarthamster.tech от пользователя ' + name;\n  const emailParams = new EmailParams().setFrom(from).setRecipients(recipients).setSubject(subject).setText(emailMessage); // mailersend.send(emailParams);\n}\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let emailMessage = '🥳 Покупка курса 🥳 :' + newLine + 'Имя ' + name + newLine + 'Почта ' + email + newLine + 'Телеграмм ' + telegramId + newLine + 'Курс ' + course + newLine + 'Хэш транзакции ' + txHash;\n  const subject = '🥳 Покупка курса 🥳 с сайта smarthamster.tech от пользователя ' + name;\n  sendPaymentInfo;\n}\n\nfunction sendContactMe(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: '{\"message\": \"' + message + '\"}'\n  };\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: '{\"message\": \"' + message + '\"}'\n  };\n  const response = fetch('https://smarthamster.tech/php/buy.php', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  return response;\n}","map":{"version":3,"names":["newLine","from","recipients","Recipient","sendContactMeMessageToEmail","name","question","telegramMessage","subject","emailParams","EmailParams","setFrom","setRecipients","setSubject","setText","emailMessage","sendBuyMessageToEmail","email","telegramId","course","txHash","sendPaymentInfo","sendContactMe","message","options","method","headers","Accept","body","response","fetch","then","json","console","log","catch","err","error"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/src/utils/emailNotifications.js"],"sourcesContent":["let newLine = '\\n';\n\nconst from = 'donotreply@smarthamster.tech';\nconst recipients = [new Recipient('sh.node.studio@gmail.com', 'sh.node.studio')];\n\nexport function sendContactMeMessageToEmail(name, question) {\n  let telegramMessage =\n    '🚨 🤓 👨‍💻 Привет, заинтересовался вашим курсом, свяжитесь со мной: 🍑' +\n    name +\n    ' 🍑' +\n    newLine +\n    '❓❓❓ У меня возник следующий вопрос: ' +\n    question +\n    ' ❓ ❓ ❓' +\n    newLine +\n    '💥 🔥 🚀';\n\n  const subject = 'Запрос на обратную связь с сайта smarthamster.tech от пользователя ' + name;\n\n  const emailParams = new EmailParams()\n    .setFrom(from)\n    .setRecipients(recipients)\n    .setSubject(subject)\n    .setText(emailMessage);\n\n  // mailersend.send(emailParams);\n}\n\nexport function sendBuyMessageToEmail(name, email, telegramId, course, txHash) {\n  let emailMessage =\n    '🥳 Покупка курса 🥳 :' +\n    newLine +\n    'Имя ' +\n    name +\n    newLine +\n    'Почта ' +\n    email +\n    newLine +\n    'Телеграмм ' +\n    telegramId +\n    newLine +\n    'Курс ' +\n    course +\n    newLine +\n    'Хэш транзакции ' +\n    txHash;\n\n  const subject = '🥳 Покупка курса 🥳 с сайта smarthamster.tech от пользователя ' + name;\n\n  sendPaymentInfo;\n}\n\nfunction sendContactMe(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: '{\"message\": \"' + message + '\"}',\n  };\n\n  const response = fetch('https://smarthamster.tech/php/contactMe.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n\nfunction sendPaymentInfo(message) {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: '{\"message\": \"' + message + '\"}',\n  };\n\n  const response = fetch('https://smarthamster.tech/php/buy.php', options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  return response;\n}\n"],"mappings":"AAAA,IAAIA,OAAO,GAAG,IAAd;AAEA,MAAMC,IAAI,GAAG,8BAAb;AACA,MAAMC,UAAU,GAAG,CAAC,IAAIC,SAAJ,CAAc,0BAAd,EAA0C,gBAA1C,CAAD,CAAnB;AAEA,OAAO,SAASC,2BAAT,CAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;EAC1D,IAAIC,eAAe,GACjB,4EACAF,IADA,GAEA,KAFA,GAGAL,OAHA,GAIA,sCAJA,GAKAM,QALA,GAMA,QANA,GAOAN,OAPA,GAQA,UATF;EAWA,MAAMQ,OAAO,GAAG,wEAAwEH,IAAxF;EAEA,MAAMI,WAAW,GAAG,IAAIC,WAAJ,GACjBC,OADiB,CACTV,IADS,EAEjBW,aAFiB,CAEHV,UAFG,EAGjBW,UAHiB,CAGNL,OAHM,EAIjBM,OAJiB,CAITC,YAJS,CAApB,CAd0D,CAoB1D;AACD;AAED,OAAO,SAASC,qBAAT,CAA+BX,IAA/B,EAAqCY,KAArC,EAA4CC,UAA5C,EAAwDC,MAAxD,EAAgEC,MAAhE,EAAwE;EAC7E,IAAIL,YAAY,GACd,0BACAf,OADA,GAEA,MAFA,GAGAK,IAHA,GAIAL,OAJA,GAKA,QALA,GAMAiB,KANA,GAOAjB,OAPA,GAQA,YARA,GASAkB,UATA,GAUAlB,OAVA,GAWA,OAXA,GAYAmB,MAZA,GAaAnB,OAbA,GAcA,iBAdA,GAeAoB,MAhBF;EAkBA,MAAMZ,OAAO,GAAG,mEAAmEH,IAAnF;EAEAgB,eAAe;AAChB;;AAED,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;EAC9B,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFK;IAMdC,IAAI,EAAE,kBAAkBL,OAAlB,GAA4B;EANpB,CAAhB;EASA,MAAMM,QAAQ,GAAGC,KAAK,CAAC,6CAAD,EAAgDN,OAAhD,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADL,EAEdD,IAFc,CAERF,QAAD,IAAcI,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAFL,EAGdM,KAHc,CAGPC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOP,QAAP;AACD;;AAED,SAASR,eAAT,CAAyBE,OAAzB,EAAkC;EAChC,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFK;IAMdC,IAAI,EAAE,kBAAkBL,OAAlB,GAA4B;EANpB,CAAhB;EASA,MAAMM,QAAQ,GAAGC,KAAK,CAAC,uCAAD,EAA0CN,OAA1C,CAAL,CACdO,IADc,CACRF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADL,EAEdD,IAFc,CAERF,QAAD,IAAcI,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAFL,EAGdM,KAHc,CAGPC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHD,CAAjB;EAKA,OAAOP,QAAP;AACD"},"metadata":{},"sourceType":"module"}