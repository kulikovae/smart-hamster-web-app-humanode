{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserLocalStorageKeyStore = void 0;\n\nconst keystore_1 = require(\"./keystore\");\n\nconst key_pair_1 = require(\"../utils/key_pair\");\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\n\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n  /**\n   * @param localStorage defaults to window.localStorage\n   * @param prefix defaults to `near-api-js:keystore:`\n   */\n  constructor() {\n    let localStorage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.localStorage;\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LOCAL_STORAGE_KEY_PREFIX;\n    super();\n    this.localStorage = localStorage;\n    this.prefix = prefix;\n  }\n  /**\n   * Stores a {@link KeyPair} in local storage.\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   * @param keyPair The key pair to store in local storage\n   */\n\n\n  setKey(networkId, accountId, keyPair) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    });\n  }\n  /**\n   * Gets a {@link KeyPair} from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   * @returns {Promise<KeyPair>}\n   */\n\n\n  getKey(networkId, accountId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n\n      if (!value) {\n        return null;\n      }\n\n      return key_pair_1.KeyPair.fromString(value);\n    });\n  }\n  /**\n   * Removes a {@link KeyPair} from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   */\n\n\n  removeKey(networkId, accountId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    });\n  }\n  /**\n   * Removes all items that start with `prefix` from local storage\n   */\n\n\n  clear() {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const key of this.storageKeys()) {\n        if (key.startsWith(this.prefix)) {\n          this.localStorage.removeItem(key);\n        }\n      }\n    });\n  }\n  /**\n   * Get the network(s) from local storage\n   * @returns {Promise<string[]>}\n   */\n\n\n  getNetworks() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = new Set();\n\n      for (const key of this.storageKeys()) {\n        if (key.startsWith(this.prefix)) {\n          const parts = key.substring(this.prefix.length).split(':');\n          result.add(parts[1]);\n        }\n      }\n\n      return Array.from(result.values());\n    });\n  }\n  /**\n   * Gets the account(s) from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @returns{Promise<string[]>}\n   */\n\n\n  getAccounts(networkId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = new Array();\n\n      for (const key of this.storageKeys()) {\n        if (key.startsWith(this.prefix)) {\n          const parts = key.substring(this.prefix.length).split(':');\n\n          if (parts[1] === networkId) {\n            result.push(parts[0]);\n          }\n        }\n      }\n\n      return result;\n    });\n  }\n  /**\n   * @hidden\n   * Helper function to retrieve a local storage key\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the storage keythat's sought\n   * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n   */\n\n\n  storageKeyForSecretKey(networkId, accountId) {\n    return `${this.prefix}${accountId}:${networkId}`;\n  }\n  /** @hidden */\n\n\n  *storageKeys() {\n    for (let i = 0; i < this.localStorage.length; i++) {\n      yield this.localStorage.key(i);\n    }\n  }\n\n}\n\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","BrowserLocalStorageKeyStore","keystore_1","require","key_pair_1","LOCAL_STORAGE_KEY_PREFIX","KeyStore","constructor","localStorage","window","prefix","setKey","networkId","accountId","keyPair","setItem","storageKeyForSecretKey","toString","getKey","getItem","KeyPair","fromString","removeKey","removeItem","clear","key","storageKeys","startsWith","getNetworks","Set","parts","substring","length","split","add","Array","from","values","getAccounts","push","i"],"sources":["/Users/loyanix/projects/smart-hamster-web-app/node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return key_pair_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}